# -- AtomiCloud Service Tree. See [ServiceTree](https://atomicloud.larksuite.com/wiki/OkfJwTXGFiMJkrk6W3RuwRrZs64?theme=DARK&contentTheme=DARK#MHw5d76uDo2tBLx86cduFQMRsBb)
serviceTree:
  platform: &platform sulfoxide
  service: &service gold
  layer: &layer "1"
  module: &module core

# -- Kubernetes labels and annotations, following Service Tree
tags: &tags
  atomi.cloud/platform: *platform
  atomi.cloud/service: *service
  atomi.cloud/layer: *layer
  atomi.cloud/module: *module

# -- YAML Anchor for PodSecurityContext
podSecurityContext: &podSecurityContext
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  runAsNonRoot: true

# -- YAML Anchor for SecurityContext
securityContext: &securityContext
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 3000
  capabilities:
    drop:
      - ALL

# -- External Ingress Controller configuration. See [Nginx Helm Chart](https://kubernetes.github.io/ingress-nginx/deploy/)
ingress-nginx:
  podSecurityPolicy:
    <<: *podSecurityContext
  commonLabels:
    <<: *tags

  controller:
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: DoNotSchedule
        minDomains: 3
        labelSelector:
          matchLabels:
            <<: *tags
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        scrapeInterval: 60s
    config:
      enable-opentelemetry: "true"
      opentelemetry-config: "/etc/nginx/opentelemetry.toml"
      opentelemetry-operation-name: "HTTP $request_method $service_name $uri"
      opentelemetry-trust-incoming-span: "true"
      otlp-collector-host: "entei-silicon-otlp-collector.sulfoxide.svc"
      otlp-collector-port: "4317"
      otel-max-queuesize: "2048"
      otel-schedule-delay-millis: "5000"
      otel-max-export-batch-size: "512"
      otel-service-name: "nginx-proxy" # Opentelemetry resource name
      otel-sampler: "AlwaysOn" # Also: AlwaysOff, TraceIdRatioBased
      otel-sampler-ratio: "1.0"
      otel-sampler-parent-based: "false"
      log-format-upstream: >- 
        {
        "time": "$time_iso8601",
        "remote_addr": "$proxy_protocol_addr",
        "x_forwarded_for": "$proxy_add_x_forwarded_for",
        "request_id": "$req_id",
        "remote_user": "$remote_user",
        "bytes_sent": $bytes_sent,
        "request_time": $request_time,
        "status": $status,
        "vhost": "$host",
        "request_proto": "$server_protocol",
        "upstream_name": "$proxy_upstream_name",
        "upstream_add": "$upstream_addr",
        "upstream_status": "$upstream_status",
        "path": "$uri",
        "request_query": "$args",
        "request_length": $request_length,
        "duration": $request_time,
        "method": "$request_method",
        "http_referrer": "$http_referer",
        "http_user_agent": "$http_user_agent",
        "service_name": "$service_name",
        "service_port": "$server_port",
        "namespace": "$namespace",
        "ingress_name": "$ingress_name"
        }

    opentelemetry:
      enabled: true
      containerSecurityContext:
        allowPrivilegeEscalation: false
    extraArgs:
      enable-ssl-passthrough: "true"
    annotations:
      <<: *tags
    podAnnotations:
      <<: *tags
    labels:
      <<: *tags
    podSecurityContext:
      <<: *podSecurityContext
    resources:
      limits:
        cpu: 4
        memory: 8Gi
      requests:
        cpu: 100m
        memory: 256Mi
    autoscaling:
      enabled: true
      minReplicas: 3
      maxReplicas: 12
      targetCPUUtilizationPercentage: 75
      targetMemoryUtilizationPercentage: 75
    podLabels:
      <<: *tags
